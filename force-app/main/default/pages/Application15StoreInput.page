<!--Application15StoreInput-->
<apex:page docType="html-5.0" Controller="ApplicationStage15Controller" action="{!initStorePage}" sidebar="false" standardStylesheets="false" showHeader="false" applyHtmlTag="false" applyBodyTag="false">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <title>店舗詳細画面</title>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
            
            <link href="{!URLFOR($Resource.SiteResources, 'css/common.css')}" rel="stylesheet" />
            <link href="{!URLFOR($Resource.SiteResources, 'css/bootstrap.min.css')}" rel="stylesheet"/>
            <apex:stylesheet value="{!URLFOR($Resource.otherResource, 'otherResource/css/animate.min.css')}" />


            <apex:slds />
            
            <style>
                p {
                font-family: "Ek Mukta";
                }
                span {
                font-family: "Ek Mukta";
                }
                label {
                font-family: "Ek Mukta";
                color: #5A5A5A;
                }
                select {
                font-family: "Ek Mukta";
                }
                h3 {
                font-family: "Ek Mukta";
                }
                h5 {
                font-family: "Ek Mukta";
                }
                li {
                font-family: "Ek Mukta";
                }
                div {
                font-family: "Ek Mukta";
                }
                .slds-lookup__search-input::-webkit-input-placeholder {
                font: 1rem "Ek Mukta";
                /* padding-left: 1rem; */
                }
                .slds-listbox__option .slds-listbox__option-meta{
                color: #222222;
                font: 1rem "Ek Mukta";
                }
                .slds-pill__label {
                font: 1rem "Ek Mukta";
                }
                .slds-section__title {
                margin-top: 15px;
                border-top: solid #006400 !important;
                }
                
                .slds-section__title span {
                font-size: 1.125rem !important;
                font-weight: bold;
                }
                
                .uiInput {
                padding: 1rem;
                }
                
                .infoDiv {
                padding: 6px 0;
                }
                
                .infoDiv label {
                margin: 0;
                font-size: 1rem;
                }
                
                .infoDiv input,select {
                border: 1px solid #adadad;
                border-radius: 3px;
                line-height: 1.875rem;
                padding: 0 14px;
                height: 40px;
                }
                
                .infoDiv select {
                border: 1px solid #adadad;
                border-radius: 3px;
                line-height: 1.875rem;
                padding: 0 0 0 14px;
                height: 40px;
                }
                
                .infoDiv textarea {
                border: 1px solid #adadad;
                border-radius: 3px;
                height: 74px;
                }
                
                .unvCheckBox {
                /* -webkit-appearance: none; */
                border-color: blue !important;
                width: 1.5rem!important;
                height: 1.5rem!important;
                vertical-align: -.25em;
                border: 1px solid rgb(242, 242, 242);
                border-radius: .125rem;
                transition: .5s ease all;
                background: rgb(255, 255, 255);
                }
                
                .noteDiv {
                /* padding-bottom: 20px; */
                }
                
                .noteDiv p {
                border:1px solid #adadad;
                border-radius: 3px;
                padding: 6px;
                }
                
                .required>label:before {
                content:"*";
                color: red;
                }
                
                .slds-scope .slds-nubbin_bottom-left:before {
                left: 6rem;
                }
                .slds-scope .slds-nubbin_bottom-left:after {
                left: 6rem;
                }
                
                .hasFieldError {   
                border: 1px solid rgb(194, 57, 52)!important; 
                }
                .fieldErrorMsg {
                font-size: 0.85rem;   
                color: rgb(194, 57, 52)!important;
                }
                
                .icon-plus::before {
                content: '\FF0B';
                color: #A7C0DE;
                background-color: #F0F8FF;
                font-size: 1.1em;
                margin-left: -1rem;
                margin-right: .25rem;
                padding: 0 5px;
                border: 1px solid #A7C0DE;
                border-radius: .1em;
                text-align: center;
                width: 1.7em;
                left: 0;
                }
                .icon-minus::before {
                content: '\FF0D';
                color: #A7C0DE;
                font-size: 1.1em;
                margin-left: -1rem;
                margin-right: .25rem;
                padding: 0 5px;
                border: 1px solid #A7C0DE;
                border-radius: .1em;
                background-color: #FFF;
                text-align: center;
                width: 1.7em;
                left: 0;
                }
                
                .postcode-padding {
                padding-right: 10px;
                padding-left: 15px;
                }
                
                .effortdtable {
                display: table; /* ブロックレベル要素をtableと同じように表示にする */
                }
                .effortdtable_c {
                display: table-cell; /* ブロックレベル要素をtd(th)と同じように表示にする */
                vertical-align: top;
                border: none;
                }
                
                @media screen and (max-width: 768px) {
                
                .card {
                width: 100%;
                border: 0;
                }
                .container {
                padding: 0;
                }
                
                .infoDiv label {
                padding: 0;
                font-size: 0.875rem;
                }
                .button{
                background:gold;
                padding:1em 1em;
                border:black 2px solid;
                text-decoration:none;
                font-size:1.5em;
                }
                .inline-block{
                display:inline-block;
                margin:0 auto;
                }
                
                }
            </style>
        </head>
        
        <div class="container col-md-7"> 
            <h3 class="slds-section__title">
                <span>店舗詳細</span>
            </h3>
            <apex:form id="formId">
                <div class="card">
                    <div id="errorMsgArea" class="message d-none">
                        <apex:inputHidden value="{!JSONString}" id="msgHidden" />
                        <div class="error-header col-12">
                            <h5>このページのエラーを確認してください。</h5>
                        </div>
                    </div>
                    <div class="pt-md-3 pl-md-3 pr-md-3">
                            <section class="accordion" id="store_section">
                                <apex:inputhidden value="{!store.STORE_HISTORY_ID__c}" id="storeHistoryId"/>
                                <div class="card" id="store{!store.StoreIndex__c}Card">
                                    <div class="card-body pt-0 pb-0">
                                        <div class="row infoDiv required">
                                            <apex:outputText id="No" value="店舗{!store.StoreIndex__c}" style="font-size:1.125rem;color:#adadad;font-style:italic;" />
                                        </div>
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="店舗区分" for="storeKbn" />
                                            <apex:inputField styleClass="form-control" value="{!store.Application_Store_Kbn__c}" id="storeKbn"/>
                                        </div>
                                        
                                        <div class="row infoDiv timeSavingBusiness required">
                                            <apex:outputLabel value="時間短縮営業等実施期間（{!startDateLbl}以降の時短営業をした初日を記入してください。）" for="timeSavingBusiness" />
                                            <div class="form-inline col-12 p-0" id="timeSavingBusiness{!store.StoreIndex__c}">
                                                <label class="pl-1 pr-2">{!startYearLbl}</label>
                                                <apex:selectList style="width: auto;height: 40px;" styleClass="form-control" size="1" id="tsbStartDay" value="{!storeTsbStartDate.customDateStr}" onchange="calculateAmount(this)">
                                                    <apex:selectOptions value="{!SelectTsbDate}"/>
                                                </apex:selectList>
                                                <label style="padding-right: .75rem">　から</label>
                                                <label for="tsbStartDay" class="pl-1 pr-2">{!endDateLbl}まで（<apex:outputText value="{!store.Application_Store_Days__c}" id="tsbDaysDiff" />日間）</label>
                                            </div>
                                        </div>
                                        
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="許可番号（飲食店営業許可書の許可番号・許可年月日を記載してください。）" for="perNumber" />
                                            <div class="form-inline col-12 p-0" id="perNumber">
                                                <apex:inputField styleClass="form-control" style="width:25%;" value="{!store.Application_Store_Per_Number_Com__c}" id="perNumberCom" />
                                                
                                                <label for="perNumberIssue" class="pl-1 pr-2">第</label>
                                                <apex:inputField styleClass="form-control" style="width:40%;" value="{!store.Application_Store_Per_Number_Issue__c}" id="perNumberIssue" />
                                                <label class="pl-1 pr-2">号</label>
                                            </div>
                                        </div>
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="許可年月日" for="perDate" />
                                            <div class="form-inline col-12 p-0" id="perDate">
                                                <apex:selectList style="width: auto;height: 40px;" styleClass="form-control" size="1" id="perYear" value="{!storePerDate.customYear}">
                                                    <apex:selectOptions value="{!selectWarekiYear}"/> 
                                                </apex:selectList>
                                                <label for="perYear" class="pl-1 pr-2">年</label>
                                                
                                                <apex:selectList style="width: auto;height: 40px;" styleClass="form-control" size="1" id="perMonth" value="{!storePerDate.customMonth}" >
                                                    <apex:selectOptions value="{!selectMonth}"/>
                                                </apex:selectList>
                                                <label for="perMonth" class="pl-1 pr-2">月</label>
                                                
                                                <apex:selectList style="width: auto;height: 40px;" styleClass="form-control" size="1" id="perDay" value="{!storePerDate.customDay}">
                                                    <apex:selectOptions value="{!selectDay}"/>
                                                </apex:selectList>
                                                <label for="perDay" class="pl-1 pr-2">日</label>
                                            </div>
                                        </div>
                                        
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="店舗所在地区分" for="storeAddressType" />
                                            <apex:inputField styleClass="form-control" value="{!store.Application_Store_Address_Type__c}" id="storeAddressType" />
                                        </div>
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="郵便番号" for="storePostCode" />
                                            <div class="w-100 slds-scope row">
                                                <div class="w-30 postcode-padding"><apex:inputField styleClass="form-control" value="{!store.Application_Store_Postal_Code__c}" id="storePostCode"/></div>
                                                <div>
                                                    <button type="button" id="srchOffAddrBtn" class="offset-1 btn btn-danger text-white" style="min-width: 50px;font-size: 1rem" onclick="getAddressByPostCode('storePostCode', 'storeAddress')">
                                                        <apex:outputText value="住所を検索" />
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="店舗所在地" for="storeAddress" />
                                            <apex:inputField styleClass="form-control" value="{!store.Application_Store_Address__c}" id="storeAddress" />
                                        </div>
                                        <div class="row infoDiv required">
                                            <apex:outputLabel value="店舗名称" for="storeName" />
                                            <apex:inputField styleClass="form-control" value="{!store.Application_Store_Name__c}" id="storeName"/>
                                        </div>
                                        <div class="row infoDiv effortDetails required">
                                            <apex:outputLabel value="取組内容（※該当する項目にチェック（✔）を付けてください。）" />
                                            <div class="effortdtable">
                                                <div class="effortdtable_c">
                                                    <apex:inputCheckbox style="width: auto;margin-right: 10px;" styleClass="unvCheckBox" value="{!store.Application_Store_Effort_DetailsA__c}" id="storeEffortDetailsA"/>
                                                </div>
                                                <div class="effortdtable_c">
                                                    <apex:outputLabel style="margin-right: 10px;" value="県からの時間短縮営業要請時は、夜22時から翌朝5時までの時間帯に営業を行っていたが、当該要請に協力し、時短営業実施期間は、5時から22時までの間に営業時間を短縮（休業）しました。" for="storeEffortDetailsA{!store.StoreIndex__c}" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>

                        <div class="row justify-content-right">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <td style="width: 30%;min-width: 5.5rem;">
                                            申請金額
                                        </td>
                                        <td>
                                            <u>*<span>&emsp;&emsp;</span>
                                                <apex:outputField value="{! store.Application_For_Parent_Amount__c }" id="applyApplication" />
                                                &nbsp;円
                                            </u>
                                        </td>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
               <div class="row justify-content-center">
                    <apex:actionFunction action="{!toUploadFileForStorePage}" reRender="msgHidden" name="toUploadFileForStorePage" oncomplete="backcheck();"/>
                    <apex:actionFunction action="{!toUploadFileForStore}" name="toUploadFileForStore"/>
                    <button type="button" id="submitBtn" class="col-3 col-md-4  btn btn-danger btn-lg" style="width: 50px;font-size: 1rem" onclick="inputCheck()">
                        <apex:outputText value="店舗書類添付画面へ" />
                    </button>
                </div>
                <div class="row justify-content-center">
                    <apex:actionFunction action="{!goBackFromStore}" name="toInput"/>
                    <button type="button" class="col-3 col-md-3  btn btn-info" style="width: 50px;font-size: 1rem" onclick="toInput();">戻る</button>
                </div>

            </apex:form>
        </div>
        <apex:includeScript value="{!URLFOR($Resource.otherResource, 'otherResource/js/jquery.min.js')}"/>
        
        <apex:includeScript value="{!URLFOR($Resource.otherResource, 'otherResource/js/bootstrap.min.js')}"/>
        
        <apex:includeScript value="{!URLFOR($Resource.otherResource, 'otherResource/js/svg4everybody.min.js')}"/>
        <script>svg4everybody();</script>
        
        <apex:includeScript value="/soap/ajax/25.0/connection.js" />
            <apex:includeScript value="/soap/ajax/25.0/apex.js" />
                
                <script type="text/javascript">
                    $(function() {
                        $('.show').each(function(index, element){
                            var show = $(element).closest(".card").find(".card-header").find("span").eq(0);
                            $(show).addClass("icon-minus");
                            $(show).removeClass("icon-plus");
                            $(element).find(".card-body").children("div:not(.noRequired)").addClass("required");
                        });
                    });
        
        $('.collapse').on('hide.bs.collapse', function () {
            var hide = $(this).closest(".card").find(".card-header").find("span").eq(0);
            $(hide).addClass("icon-plus");
            $(hide).removeClass("icon-minus");
        });
        $('.collapse').on('show.bs.collapse', function () {
            var show = $(this).closest(".card").find(".card-header").find("span").eq(0);
            $(show).addClass("icon-minus");
            $(show).removeClass("icon-plus");
        });
        
        $('.collapse').find("input,textarea,select").on('change', function () {
            var isInputNull = true;
            $(this).closest(".card-body").find("input[type='checkbox']").each(function(index,element){
                var vBox = $(element).prop("checked");
                if(vBox){
                    isInputNull = false;
                }
            });
            $(this).closest(".card-body").find("input:not(input[type='checkbox']),textarea").each(function(index,element) {
                var vInput = $(element).val();
                if(vInput !== undefined && vInput !== '' ){
                    isInputNull = false;
                }
            });
            $(this).closest(".card-body").find("textarea").each(function(index,element) {
                var vTextArea = $(element).val();
                if(vTextArea !== undefined && vTextArea !== '' ){
                    isInputNull = false;
                }
            });
            $(this).closest(".card-body").find("select").each(function(index,element) {
                var vSelect = $(element).val();
                if(vSelect !== undefined && vSelect !== '' ){
                    isInputNull = false;
                }
            });
            if(isInputNull){
                $(this).closest(".card-body").children("div").removeClass("required");
            } else{
                $(this).closest(".card-body").children("div:not(.noRequired)").addClass("required");
            }
        });
        
        function calculateAmount(_this) {
            // 申請内訳の金額設定
            // 該当店舗の申請金額設定
            var unitPricePerDay = parseInt('{!$Label.APPLICATION4_PAYMENT_UNIT_PRICE}');
            var tsbEndDay = new Date("{!CONST_SHORTER_BUSI_END_DATE}");
            const dayZone = '{!$Label.CONST_DAILY_ZONE_REQ}'.split(',');
            const amountZone = '{!$Label.CONST_DAILY_AMOUNT_REQ}'.split(',');
            var id = $(_this).attr("id");
            var index = parseInt(id.split(":")[3]);
            var tsbStartDay = $(_this).val();
            var storeAmount = 0;
            if(tsbStartDay){
                if(dayZone.length+1 !=amountZone.length){
                    var startDate = new Date(tsbStartDay.replace(/-/g, "/"));
                    var endDate = tsbEndDay;
                    var diff = endDate - startDate;
                    tsbDaysDiff = diff /1000/60/60/24 + 1;
                    storeAmount = unitPricePerDay * tsbDaysDiff;
                }else{
                    var startDate = new Date(tsbStartDay.replace(/-/g, "/"));
                    var endDate = tsbEndDay;
                    var diff = endDate - startDate;
                    tsbDaysDiff = diff /1000/60/60/24 + 1;
                    for (let i = 0; i < amountZone.length; i++) {
                        
                        if(i!=amountZone.length-1){
                            endDate = new Date(dayZone[i].replace(/-/g, "/"));
                        }else{
                            endDate = tsbEndDay;
                        }
                        var subDiff = endDate - startDate;
                        if(subDiff>=0){
                            var daysDiff = subDiff /1000/60/60/24 + 1;
                            storeAmount += amountZone[i] * daysDiff;
                            startDate=new Date((endDate).valueOf() + 1000*60*60*24);
                        }
                    }
                }
                $("span[id$='tsbDaysDiff']").text(tsbDaysDiff);
            } 
            if (storeAmount != 0) {
                $("span[id$='applyApplication']").text(storeAmount.toLocaleString());
            }
            
        }
        
        $(function () {
            backToTop();
            if($('input[id$="storeHistoryId"]').val()!=''&&$('input[id$="storeHistoryId"]').val()!= undefined){
                $('select[id$="storeKbn"]').prop('disabled','disabled');
                $('input[id$="perNumberCom"]').prop('disabled','disabled');
                $('input[id$="perNumberIssue"]').prop('disabled','disabled');
                $('select[id$="perYear"]').prop('disabled','disabled');
                $('select[id$="perMonth"]').prop('disabled','disabled');
                $('select[id$="perDay"]').prop('disabled','disabled');
                $('select[id$="storeAddressType"]').prop('disabled','disabled');
                $('input[id$="storePostCode"]').prop('disabled','disabled');
                $("#srchAppAddrBtn").prop("disabled", true);
                $('textarea[id$="storeAddress"]').prop('disabled','disabled');
                $('input[id$="storeName"]').prop('disabled','disabled');
            }
        });
        
        function inputCheck(){
            $('#submitBtn').prop('disabled','disabled');
            $('.fieldErrorMsg').remove();

            $('.hasFieldError').each(function(){
                $(this).removeClass('hasFieldError');
            });
            
            var checkResult = true;
            var checkBirthday = true;
            var checkPerDate = true;
            var checkPerDateSet = new Set();
            var checkPerDateNullSet = new Set();
            var checkPerNumber = true;
            var storeCount = '';
            $('.required:not(.noneValidateDiv)').find(':input').not(':hidden').each(function(index, element){
                var inputElement = $(element);
                var inputValue = inputElement.val();
                // Id
                var inputId = inputElement.attr('id');
                
                if (inputValue === undefined || inputValue === '' ) {
                    // ボタンの場合、何もしない
                    if (inputElement[0].type == 'button') return true;
                    
                    var inputLabel = $('label[for="' + inputId + '"]').text();
                    // 許可年月日
                    var idx = -1;
                    checkPerDate = true;
                    if(inputId.indexOf('perYear') !== -1 || inputId.indexOf('perMonth') !== -1 || inputId.indexOf('perDay') !== -1) {
                        inputElement.addClass('hasFieldError');
                        if(inputId.includes('perYear')){
                            checkPerDate = false;
                            idx = parseInt(inputId.split(':')[3])+1;
                            inputLabel = $('label[for$="perDate"]').text();
                            checkPerDateNullSet.add(idx);
                        } else {
                            return true;
                        }
                    } 
                    // 許可番号
                    checkPerNumber = true;
                    if(inputId.indexOf('perNumberCom') !== -1 || inputId.indexOf('perNumberIssue') !== -1) {
                        inputElement.addClass('hasFieldError');
                        if(inputId.includes('perNumberCom')){
                            checkPerNumber = false;
                            idx = parseInt(inputId.split(':')[3])+1;
                            inputLabel = $('label[for$="perNumber"]').text();
                        } else {
                            return true;
                        }
                    }
                    // 時間短縮営業等実施期間
                    if (inputId.indexOf('tsbStartDay') !== -1) {
                        idx = parseInt(inputId.split(':')[3])+1;
                        inputLabel = $('label[for$="timeSavingBusiness"]').text();
                    }
                    
                    var sectionIndex = inputElement.parent().parent().parent().parent().children().children(".card-header").children("span").eq(0).text();
                    
                    // 許可年月日、許可番号、取組内容、時間短縮営業等実施期間
                    if (inputLabel.includes('許可年月日') || inputLabel.includes('許可番号') || inputLabel.includes('取組内容')  || inputLabel.includes('時間短縮営業等実施期間')) {
                        sectionIndex = inputElement.parent().parent().parent().parent().parent().children().children(".card-header").children("span").eq(0).text();
                    }
                    // 郵便番号
                    if (inputLabel.includes('郵便番号')) {
                        sectionIndex = inputElement.parent().parent().parent().parent().parent().parent().children().children(".card-header").children("span").eq(0).text();
                    }
                    if (!checkPerDate || !checkPerNumber || (checkPerDate && checkPerNumber)) {
                        inputElement.closest('.required').append('<div class="col-12 fieldErrorMsg">'+ inputLabel +'を入力してください</div>');
                    }
                    inputElement.addClass('hasFieldError');
                    checkResult = false;
                } else {
                    if(inputId.indexOf('perYear') !== -1) {
                        checkPerDateSet.add(inputId.slice(20));
                    }
                }
            });
            
            $('.required.effortDetails').each(function(index, element){
                var checkedCnt = 0;
                $(element).find("input[type='checkbox']").each(function(boxIndex, box){
                    if($(box).prop('checked')){
                        checkedCnt++;
                    }
                });
                
                if(checkedCnt != 1){
                    var sectionIndex = $(element).parent().parent().parent().children().children(".card-header").children("span").eq(0).text();
                    var inputLabel = $(element).children("label").text();
                    
                    $(element).find("input[type='checkbox']").each(function(boxIndex, box){
                        $(box).addClass('hasFieldError');
                    });
                    $(element).append('<div class="col-12 fieldErrorMsg">※該当する項目にチェック（✔）を付けてください。</div>');
                    checkResult = false;
                }
            });
            
            function addError(_element, inputLabel){
                _element.closest('.required').append('<div class="col-12 fieldErrorMsg">'+ inputLabel +'を入力してください</div>');
            }
            
            $('section[id*="store_"]').not(":hidden").each(function(index, element) {
                var parentDiv = $(element).find('div[id^="perDate"]');
                var parentDivId = parentDiv.attr('id');
                var storeIdx = parentDivId.slice(7);
                if(checkPerDateSet.has(storeIdx) && !checkPerDateNullSet.has(storeIdx)){
                    var perYear = parentDiv.find('select').eq(0).val();
                    var perMonth = parentDiv.find('select').eq(1).val();
                    var perDay = parentDiv.find('select').eq(2).val();
                    
                    if(!doCheckDate(perYear, perMonth, perDay)) {
                        console.log('parentDivId:' + parentDivId);
                        var sectionLabel = storeIdx == '1' ? $(element).children('.card').children('.card-header').children('span').eq(0).text() :
                        $(element).children('.card').children('a').children('.card-header').children('span').eq(0).text();
                        var inputLabel = $('label[for$="' + parentDivId + '"]').text();
                        $(parentDiv).closest('.required').append('<div class="col-12 fieldErrorMsg">'+ inputLabel +'を正しく入力してください</div>'); 
                        
                        checkResult = false;
                    }
                }
            });
            
            
            if (!checkResult) {
                $('#submitBtn').removeAttr('disabled');
                backToTop();
                
                return false;
            }
            
            $('input[id$="msgHidden"]').val('');
            toUploadFileForStorePage();
            return true;
            
        }
        function backcheck(){
            if($('input[id$="msgHidden"]').val()==''){
                toUploadFileForStore();
            }else{
                $('.fieldErrorMsg').remove();
                $('#errorMsgArea').addClass('d-none');
                $('#errorMsgArea').removeClass('d-none');
                $('#errorMsgArea').append('<div class="col-12 fieldErrorMsg">'+ $('input[id$="msgHidden"]').val() +'</div>');
                $('#submitBtn').removeAttr('disabled');
                backToTop();
            }
        }
        function backToTop(){
            if(window.parent.window.scrollTo(0,0)===undefined){
                window.scrollTo(0,0);
            }else{
                window.parent.window.scrollTo(0,0);
            }
        }
        
        /**
        * 郵便番号で住所マスタから住所を取得する
        */
        function getAddressByPostCode(postcodeFieldId, addressFieldId) {
            
            let postcode = $('input[id$="' + postcodeFieldId + '"]').val();
            if (postcode) {
                // 半角数字7桁(ハイフン無し)の場合、住所を検索する
                if (postcode.match(/[0-9]{7}/)) {
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.ApplicationStage15Controller.getAddress}',
                        $('input[id$="' + postcodeFieldId + '"]').val(), 
                        function(result, event){
                            if (event.status) {
                                if (!result) {
                                    alert('{!$Label.Application3PostcodeNotExistsErrMsg}');
                                }
                                $('textarea[id$="' + addressFieldId + '"]').val(result);
                            } else {
                                // 何もしない
                            }
                        }, 
                        {escape: true}
                    );
                    // 半角数字7桁(ハイフン無し)以外の場合
                } else {

                }
            }
            
        }
        
        function doCheckDate(y, m, d) {
            y = y.substring(0, 4);
            const date = new Date(y, m - 1, d);
            return y == date.getFullYear() && m == date.getMonth()+1 && d == date.getDate();
        }
        </script>
    </html>
</apex:page>